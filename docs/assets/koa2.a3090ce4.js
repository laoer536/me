import{o as s,c as a,a as p}from"./index.8c710d20.js";const t={class:"markdown-body"},o=p(`<img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/388d7aa477a848aba1c44c26e5f8b58a~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp?" alt="koa2+mongodb"><p>\u6211\u662F\u4E00\u540D\u524D\u7AEF\u5C0F\u83DC\u9E21\uFF0C\u5E73\u65E5\u91CC\u5199\u5199\u9875\u9762\uFF0C\u5199\u5199 BUG\uFF0C\u5E76\u4E50\u6B64\u4E0D\u75B2\uFF0C\u975E\u5E38\u6EE1\u8DB3\u3002\u5F53\u6709\u4E00\u5929\uFF0C\u6211\u7A81\u7136\u60F3\u60F3\uFF0C\u6211\u5982\u679C\u81EA\u5DF1\u8981\u505A\u4E00\u4E2A\u5B8C\u6574\u7684\u9879\u76EE\uFF0C\u90A3\u6211\u5C31\u9700\u8981\u6570\u636E\u6765\u5E2E\u5FD9\u5440\uFF0C\u53EF\u662F\u6570\u636E\u5F97\u8981\u540E\u7AEF\u5927\u4F6C\u4EEC\u5199\u63A5\u53E3\u7ED9\u6211\u624D\u884C\uFF0C\u867D\u7136\u6211\u7684\u7A0B\u5E8F\u5458\u670B\u53CB\u8FD8\u662F\u6709\u4E00\u7C73\u7C73\uFF0C\u4F46\u5927\u4F6C\u4E00\u822C\u90FD\u5FD9\u5440\uFF0C\u5B9E\u5728\u4E0D\u597D\u610F\u601D\u62C9\u7740\uFF0C\u4E8E\u662F\u6211\u5C31\u60F3\uFF0C\u6211\u662F\u5426\u53EF\u4EE5\u81EA\u5DF1\u6765\u5199\u63A5\u53E3\u5462\uFF1F</p><p>\u4E8E\u662F\u6211\u6D4F\u89C8\u4E07\u5343\u7F51\u9875\uFF0C\u9009\u62E9\u4E86\u4E00\u4E2A\u4E0D\u7528\u592A\u5377\uFF08\u4E3B\u8981\u662F\u5377\u4E0D\u52A8\u4E86 \u{1F625}\uFF09\uFF0C\u5BF9\u524D\u7AEF\u53CB\u597D\u7684 nodejs \u6765\u505A\u540E\u53F0\u5F00\u53D1\u3002\u4E0D\u8BF4\u592A\u591A\u5E9F\u8BDD\uFF0C\u5F00\u6574\uFF01</p><p><strong>1\u3001\u5B89\u88C5 mongodb</strong></p><p>\u5730\u5740\uFF1A<a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.mongodb.com%2Ftry%2Fdownload%2Fenterprise" target="_blank" rel="noopener">MongoDB Community Download | MongoDB</a></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5638e11148d3416dbeb216f8f0e1eafb~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp?" alt="image.png"></p><p>\u5177\u4F53\u540E\u7EED\u6B65\u9AA4<a href="https://www.runoob.com/mongodb/mongodb-window-install.html" target="_blank" rel="noopener">Windows \u5E73\u53F0\u5B89\u88C5 MongoDB | \u83DC\u9E1F\u6559\u7A0B (runoob.com)</a></p><p>\u548C\u94FE\u63A5\u4E2D\u7684\u6B65\u9AA4\u552F\u4E00\u4E0D\u540C\u7684\u662F\u6211\u662F\u5B89\u88C5\u4E86<code>Mongodb Compass</code>\u7684\uFF0C\u5B98\u65B9\u7684\u6570\u636E\u5E93\u56FE\u5F62\u5316\u7BA1\u7406\u5DE5\u5177\u8FD8\u662F\u5F88\u4E0D\u9519\u7684\u3002</p><p><strong>2\u3001\u4E0B\u8F7D\u4F9D\u8D56</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c87484c359934d78b3a0d9ef05d13ecd~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp?" alt="package.json\u4F9D\u8D56.png"></p><p><strong>3\u3001\u5BF9\u4F9D\u8D56\u8FDB\u884C\u914D\u7F6E\uFF08\u6211\u7EDF\u4E00\u653E\u5728\u4E86 setting \u76EE\u5F55\u4E0B\uFF09</strong></p><p>jwt</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-jwt&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">jwt</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">secret</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">JWT_SECRET</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unless</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/public</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/login</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/web</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//token\u9274\u6743\u5FFD\u7565public\u548Clogin\u3001web\u5F00\u5934\u7684\u63A5\u53E3</span>
<span class="token comment">//koa-jwt\u9ED8\u8BA4\u914D\u7F6E\u4E0B \u524D\u7AEFaxios\u7684\u8BF7\u6C42\u62E6\u622A\u7684headers\u91CC\u9762\u8FD9\u6837\u8BBE\u7F6E config.headers[&quot;authorization&quot;] = \`Bearer \${token}\`; \u5176\u4E2Dtoken\u662F\u767B\u5F55\u63A5\u53E3\u751F\u6210\u7684</span>
</code></pre><p>koa-body</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> koaBody <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-body&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> setting <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">multipart</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u652F\u6301\u6587\u4EF6\u4E0A\u4F20</span>
  <span class="token literal-property property">formidable</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">maxFieldsSize</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">// \u6587\u4EF6\u4E0A\u4F20\u5927\u5C0F\u9650\u523630M</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">koaBody</span><span class="token punctuation">(</span>setting<span class="token punctuation">)</span>
</code></pre><p>koa-static</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> koaStatic <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">koaStatic</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><p>koa-cors</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> cors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa2-cors&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> setting <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">origin</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">KOA_CORS_ORIGIN</span><span class="token punctuation">,</span> <span class="token comment">//\u53EA\u5141\u8BB8\u8FD9\u4E2A\u57DF\u540D\u7684\u8BF7\u6C42</span>
  <span class="token literal-property property">maxAge</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">//\u6307\u5B9A\u672C\u6B21\u9884\u68C0\u8BF7\u6C42\u7684\u6709\u6548\u671F\uFF0C\u5355\u4F4D\u4E3A\u79D2\u3002</span>
  <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//\u662F\u5426\u5141\u8BB8\u53D1\u9001Cookie</span>
  <span class="token literal-property property">allowMethods</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//\u8BBE\u7F6E\u6240\u5141\u8BB8\u7684HTTP\u8BF7\u6C42\u65B9\u6CD5</span>
  <span class="token literal-property property">allowHeaders</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Authorization&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//\u8BBE\u7F6E\u670D\u52A1\u5668\u652F\u6301\u7684\u6240\u6709\u5934\u4FE1\u606F\u5B57\u6BB5</span>
  <span class="token literal-property property">exposeHeaders</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;WWW-Authenticate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Server-Authorization&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//\u8BBE\u7F6E\u83B7\u53D6\u5176\u4ED6\u81EA\u5B9A\u4E49\u5B57\u6BB5</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">cors</span><span class="token punctuation">(</span>setting<span class="token punctuation">)</span>
</code></pre><p>mongoose</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> connectUrl <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MONGODB_DB</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>connectUrl<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6570\u636E\u5E93\u8FDE\u63A5\u5931\u8D25\uFF1A&#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6570\u636E\u5E93\u6210\u529F\u8FDE\u63A5\u5230\uFF1A&#39;</span> <span class="token operator">+</span> connectUrl<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> mongoose
</code></pre><p><strong>4\u3001\u5C01\u88C5\u5176\u4ED6\u4E2D\u95F4\u4EF6\uFF08\u4E5F\u662F\u653E\u5728\u4E86 setting\uFF09</strong></p><p>errHandle\u2014\u5904\u7406\u5F02\u5E38</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">errHandle</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token comment">//\u5168\u5C40\u5F02\u5E38\u5904\u7406 \u5982\u679C\u63A5\u53E3\u8C03\u7528\u65F6\u6709\u9519\u8BEF\u53D1\u751F \u4F46\u662F\u771F\u6B63\u903B\u8F91\u5904\u9057\u6F0F\u4E86\u5BF9\u8BE5\u5F02\u5E38\u7684\u5904\u7406 \u5C31\u4F1A\u5230\u8FD9\u91CC\u6765\u6267\u884C</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err\u4FE1\u606F&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CA1\u6709\u6743\u9650\u8BBF\u95EE&#39;</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token comment">//\u5904\u7406jwt\u7684token\u9274\u6743</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token comment">//\u5904\u7406\u4E3B\u8981\u662F\u63A5\u53E3\u8C03\u7528\u4EA7\u751F\u7684\u9519\u8BEF</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> errHandle
</code></pre><p>htmlHistory\u2014\u517C\u5BB9\u524D\u7AEF\u6258\u7BA1\u7684\u9759\u6001\u9875\u9762\u7684 history \u6A21\u5F0F hash \u6A21\u5F0F\u4E0D\u9700\u8981</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">htmlHistory</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// history \u4E2D\u95F4\u4EF6</span>
  <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token string">&#39;/web/&#39;</span> <span class="token comment">// \u9700\u8981\u5224\u65AD\u7684\u8DEF\u5F84</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u7B49\u5F85\u8BF7\u6C42\u6267\u884C\u5B8C\u6BD5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">404</span> <span class="token operator">&amp;&amp;</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u7B26\u5408\u6761\u4EF6</span>
    ctx<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;text/html; charset=utf-8&#39;</span> <span class="token comment">// \u4FEE\u6539\u54CD\u5E94\u7C7B\u578B</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> path <span class="token operator">+</span> <span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u4FEE\u6539\u54CD\u5E94\u4F53</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> htmlHistory
</code></pre><p>routerResponse\u2014\u7EDF\u4E00\u8BF7\u6C42\u8FD4\u56DE\u4F53</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">successCode</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">successMsg</span><span class="token operator">:</span> <span class="token string">&#39;\u63A5\u53E3\u8C03\u7528\u6210\u529F&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">failCode</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//\u9ED8\u8BA4\u7684\u5F02\u5E38\u7801</span>
  <span class="token literal-property property">failMsg</span><span class="token operator">:</span> <span class="token string">&#39;\u63A5\u53E3\u8C03\u7528\u5931\u8D25&#39;</span><span class="token punctuation">,</span> <span class="token comment">//\u9ED8\u8BA4\u7684\u5F02\u5E38\u6D88\u606F</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">routerResponse</span><span class="token punctuation">(</span><span class="token parameter">option <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span><span class="token function-variable function">success</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u63A5\u53E3\u6210\u529F\u65F6\u6211\u4EEC\u66F4\u671F\u671B\u5F97\u5230\u63A5\u53E3\u8C03\u7528\u6210\u529F\u540E\u7684\u6570\u636E\uFF0C\u867D\u7136\u6210\u529F\u8C03\u7528\u540E\u63D0\u793A\u6D88\u606F\u53EF\u80FD\u4E0D\u662F\u5F88\u91CD\u8981\uFF0C\u4F46\u662F\u6709\u65F6\u4E5F\u9700\u8981\uFF0C\u6240\u4EE5\u52A0\u4E0A</span>
      ctx<span class="token punctuation">.</span>type <span class="token operator">=</span> option<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token string">&#39;json&#39;</span>
      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">rsCode</span><span class="token operator">:</span> option<span class="token punctuation">.</span>successCode<span class="token punctuation">,</span>
        <span class="token literal-property property">rsCause</span><span class="token operator">:</span> msg <span class="token operator">||</span> option<span class="token punctuation">.</span>successMsg<span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> data <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    ctx<span class="token punctuation">.</span><span class="token function-variable function">fail</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u53D1\u751F\u5F02\u5E38\u65F6\u524D\u7AEF\u671F\u671B\u5F97\u5230\u5F02\u5E38\u4FE1\u606F\u63CF\u8FF0\u548C\u5BF9\u5E94\u7684\u72B6\u6001\u7801</span>
      ctx<span class="token punctuation">.</span>type <span class="token operator">=</span> option<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token string">&#39;json&#39;</span>
      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">rsCode</span><span class="token operator">:</span> code <span class="token operator">||</span> option<span class="token punctuation">.</span>failCode<span class="token punctuation">,</span>
        <span class="token literal-property property">rsCause</span><span class="token operator">:</span> msg <span class="token operator">||</span> option<span class="token punctuation">.</span>failMsg<span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">routerResponse</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span>
</code></pre><p>\u8FD9\u6837\u5904\u7406\u4E86\u4E4B\u540E\uFF0C\u5728\u9875\u9762\u91CC\u9762\u5C31\u53EF\u4EE5\u8FD9\u6837\u7528</p><pre class="language-js"><code class="language-js">ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token string">&#39;\u83B7\u53D6\u6240\u6709\u7528\u6237\u6210\u529F&#39;</span><span class="token punctuation">)</span>
</code></pre><p>\u6216\u8005\u8FD9\u6837</p><pre class="language-js"><code class="language-js">ctx<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
</code></pre><p>\u524D\u7AEF\u62FF\u5230\u7684\u8FD4\u56DE\u4F53\u5C31\u662F</p><pre class="language-js"><code class="language-js"><span class="token punctuation">{</span>
    <span class="token literal-property property">rsCode</span><span class="token operator">:</span>xxx<span class="token punctuation">,</span>
    <span class="token literal-property property">rsCause</span><span class="token operator">:</span>xxxx<span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span>xxx
<span class="token punctuation">}</span>
</code></pre><p><strong>\u6CE8\u610F\uFF1A\u4EE5\u4E0B\u4EE3\u7801\u90FD\u4F1A\u7528\u5230\u8FD9\u4E2A\u5C01\u88C5\u7684\u4E2D\u95F4\u4EF6 \u4FDD\u8BC1\u63A5\u53E3\u8FD4\u56DE\u4F53\u7EDF\u4E00</strong></p><p>5\u3001\u6700\u6FC0\u52A8\u7684\u5199\u63A5\u53E3\u90E8\u5206 \u{1F618}</p><p>\u767B\u5F55\u83B7\u53D6 token\u2014login.js (\u8FD9\u91CC\u505A\u793A\u4F8B\uFF0C\u6240\u4EE5\u6CA1\u6709\u63A5\u53C2\u6570\uFF0C\u8FD8\u662F\u8981\u63A5\u4E00\u4E0B\u4FE1\u606F\u7684\uFF0C\u7136\u540E\u52A0\u5165\u5230 token \u751F\u6210\u91CC\u9762)</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> jwtToken <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token comment">//\u57FA\u672C\u63A5\u53E3\u7684\u524D\u7F00 \u524D\u7AEF\u8C03\u7528\u65F6\u5730\u5740\u4E3A&#39;/login&#39;  \u5373\u4F1A\u548C\u4E0B\u9762\u7684\u5730\u5740\u62FC\u63A5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//payload\u4E2D\u52A0\u5165\u7528\u6237\u552F\u4E00\u4FE1\u606F \u4F8B\u5982\u7528\u6237\u552F\u4E00id phoneNumber password\u7B49</span>
  <span class="token keyword">const</span> token <span class="token operator">=</span> jwtToken<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">&#39;123&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">JWT_SECRET</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token string">&#39;15d&#39;</span><span class="token punctuation">,</span> <span class="token comment">//\u8BBE\u7F6E\u8BE5token\u7684\u8FC7\u671F\u65F6\u95F4</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> <span class="token string">&#39;\u83B7\u53D6token\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router
</code></pre><p>\u6587\u4EF6\u7684\u4E0A\u4F20\u548C\u4E0B\u8F7D\u2014file.js</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> sendfile <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-sendfile&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/file&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u4E0A\u4F20\u6587\u4EF6</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/upload&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> filepath<span class="token punctuation">,</span> originalFilename <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>files<span class="token punctuation">.</span>file <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u83B7\u53D6\u4E0A\u4F20\u6587\u4EF6</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span>
  <span class="token keyword">let</span> filePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">upload/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>originalFilename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token comment">//\u50A8\u5B58\u5728node\u670D\u52A1\u4E2D\u7684upload\u6587\u4EF6\u5939\u4E0B</span>
  <span class="token comment">// \u521B\u5EFA\u53EF\u5199\u6D41</span>
  <span class="token keyword">const</span> upStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>
  <span class="token comment">// \u53EF\u8BFB\u6D41\u901A\u8FC7\u7BA1\u9053\u5199\u5165\u53EF\u5199\u6D41</span>
  reader<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>upStream<span class="token punctuation">)</span>
  <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">fileUrl</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">KOA_CORS_ORIGIN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token comment">//\u524D\u9762\u90A3\u4E2A\u90E8\u5206\u540E\u671F\u53EF\u4EE5\u66FF\u6362\u4E3A\u5176\u4ED6\u53EF\u4EE5\u8BBF\u95EE\u7684\u524D\u7F00 \u8FD9\u91CC\u672C\u5730\u6D4B\u8BD5\u7528</span>
  <span class="token punctuation">}</span>
  ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>resData<span class="token punctuation">,</span> <span class="token string">&#39;\u6587\u4EF6\u4E0A\u4F20\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u4E0B\u8F7D\u6587\u4EF6</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/download&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ctx.request.query&#39;</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>query<span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> fileName <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>query
  <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">upload/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span><span class="token function">attachment</span><span class="token punctuation">(</span><span class="token function">decodeURI</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//url\u7F16\u7801 \u8F6C\u6362\u5BB9\u6613\u5F15\u8D77\u6B67\u4E49\u7684\u5B57\u7B26 \u4F8B\u5982\u4E2D\u6587\u5B57\u7B26</span>
  <span class="token keyword">await</span> <span class="token function">sendfile</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> path<span class="token punctuation">)</span> <span class="token comment">//\u524D\u7AEF\u9875\u9762\u9700\u8981\u5BF9\u6587\u4EF6\u540D\u8FDB\u884CdecodeURIComponent\u89E3\u7801 \u89E3\u7801\u540E\u80FD\u591F\u62FF\u5230\u771F\u6B63\u7684\u540D\u5B57</span>
  <span class="token comment">//\u53E6\u5916 \u524D\u7AEF\u9700\u8981\u4ECE\u8FD4\u56DE\u4F53\u4E2D\u83B7\u53D6\u6587\u4EF6\u540D\u7ED9a\u6807\u7B7E \u4ECE\u91CC\u9762\u7684headers\u7684content-disposition\u4E2D\u622A\u53D6\u83B7\u5F97---\u300B\u300B\u300B res.headers[&quot;content-disposition&quot;]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router
</code></pre><p>\u57FA\u672C\u4E0A\u90FD\u4F1A\u7528\u5230\u7684 user \u4FE1\u606F\u5904\u7406</p><p>1\u3001\u6211\u4EEC\u5148\u5EFA\u4E2A\u8868\uFF0C\u76F4\u63A5\u7528\u4EE3\u7801\u5EFA\u7ACB</p><p>src/models/user.js</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> Schema<span class="token punctuation">,</span> model <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> CompletedSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">collection</span><span class="token operator">:</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">versionKey</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">timestamps</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> UserForm <span class="token operator">=</span> <span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;UserForm&#39;</span><span class="token punctuation">,</span> CompletedSchema<span class="token punctuation">)</span>
</code></pre><p>\u5982\u4EE3\u7801\u6240\u793A\uFF0C\u8868\u793A\u6211\u4EEC\u521B\u5EFA\u4E86\u4E00\u4E2A\u540D\u4E3A users \u7684\u6570\u636E\u8868\uFF0C\u6BCF\u4E00\u4E2A user \u5583\uFF0C\u4ED6\u6709\u4E09\u4E2A\u57FA\u672C\u4FE1\u606F\uFF0C\u5206\u522B\u662F\u59D3\u540D\uFF0C\u6027\u522B\u548C\u7535\u8BDD\uFF0C\u5176\u4E2D\u5462\uFF0Cname \u548C phone \u90FD\u662F\u5B57\u7B26\u4E32\uFF0Csex \u53EA\u80FD\u53D6 0 \u548C 1\uFF0C\u719F\u6089 Typescript \u7684\u5927\u4F6C\u5E94\u8BE5\u611F\u89C9\u5F88\u4EB2\u5207\uFF0C\u8FD9\u4E0D\u5C31\u662F\u679A\u4E3E\u561B\uFF0C\u9650\u5236\u53EA\u80FD\u53D6\u8FD9\u4E24\u4E2A\u503C\u3002require \u8868\u793A\u8FD9\u4E2A\u5B57\u6BB5\u9700\u8981\u6709\u503C\u3002\u5176\u4ED6\u7684\u5C31\u4E0D\u591A\u8BF4\u5566\u3002mongoose \u8BE6\u7EC6\u7684\u4F7F\u7528\u53EF\u4EE5\u53C2\u8003\u8FD9\u4E2A\u5927\u4F6C\u5199\u7684\u6587\u7AE0\uFF1A<a href="https://juejin.cn/post/6844904054196273159" target="_blank" rel="noopener">\u4F60\u771F\u7684\u4E86\u89E3 mongoose \u5417\uFF1F - \u6398\u91D1 (juejin.cn)</a></p><p>2\u3001\u5F00\u59CB\u5199\u5173\u4E8E user \u7684\u63A5\u53E3(\u4F5C\u53C2\u8003\uFF0C\u4E0D\u4E00\u5B9A\u662F\u6700\u597D\u7684\u5199\u6CD5\uFF0C\u4F46\u8FD0\u884C\u7ED3\u679C\u80AF\u5B9A\u662F\u6B63\u786E\u7684\u54C8 \u{1F602})</p><p>src/api/user.js</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UserForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../models/user&#39;</span> <span class="token comment">//\u5C06\u6211\u4EEC\u521A\u521A\u7684\u8868\u4EA7\u751F\u7684model\u62FF\u8FC7\u6765,\u901A\u8FC7\u4ED6\u6211\u4EEC\u5B9E\u73B0\u5BF9\u6570\u636E\u5E93\u7684\u64CD\u4F5C\u3002</span>

router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> users <span class="token operator">=</span> <span class="token keyword">await</span> UserForm<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u67E5\u8BE2\u8868\u4E2D\u6240\u6709\u6570\u636E</span>
  ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> <span class="token string">&#39;\u83B7\u53D6\u6240\u6709\u7528\u6237\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/getUserInfo&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params
  ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u83B7\u53D6id\u4E3A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u7684\u7528\u6237</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/add&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//</span>
  <span class="token keyword">await</span> UserForm<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">)</span> <span class="token comment">//\u5411\u8868\u4E2D\u63D2\u5165\u6570\u636E</span>
  ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token string">&#39;\u7528\u6237\u4FE1\u606F\u63D0\u4EA4\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;/:id&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params
  ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u4FEE\u6539id\u4E3A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u7684\u7528\u6237</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token string">&#39;/:id&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params
  ctx<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5220\u9664id\u4E3A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u7684\u7528\u6237</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router
</code></pre><p>\u6700\u540E\u9644\u4E0A\u6211\u4EEC\u7A0B\u5E8F\u7684\u8FD0\u884C\u7684\u57FA\u77F3\u2014\u2014app.js</p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> cors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/koa2-cors&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/jwt&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> koaBody <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/koa-body&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> koaStatic <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/koa-static&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> htmlHistory <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/html-history&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> routerResponse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/routerResponse&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> errHandle <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/setting/error-handle&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//api\u90E8\u5206</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/api/user&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> login <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/api/login&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/api/file&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//\u57FA\u7840\u90E8\u5206</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>cors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>koaBody<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>routerResponse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>errHandle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>jwt<span class="token punctuation">)</span>
<span class="token comment">//api\u90E8\u5206</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>login<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//\u9759\u6001\u9875\u9762\u6258\u7BA1</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>htmlHistory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>koaStatic<span class="token punctuation">)</span> <span class="token comment">//\u56E0\u4E3A\u524D\u7AEF\u6253\u5305\u7684\u9875\u9762\u6587\u4EF6\u653E\u5728\u4E86web\u6587\u4EF6\u5939\u4E0B \u524D\u7AEF\u9700\u8981\u5C06\u9879\u76EEpublicPath\u4FEE\u6539\u4E3A&#39;/web/&#39; \u518D\u6253\u5305\u653E\u5165 \u6211\u8FD9\u91CC\u524D\u7AEF\u7528\u7684\u662Fvue-router\u7684history\u6A21\u5F0F</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;app started at port 9000...&#39;</span><span class="token punctuation">)</span>
</code></pre><p>\u987A\u4FBF\u770B\u770B package.json</p><pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodejs-koa2&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.7.8&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodejs for network&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon scripts/development.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon scripts/test.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;prod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon scripts/production.js&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;babel-plugin-transform-es2015-modules-commonjs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.26.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-register&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.26.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dotenv&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^16.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;jsonwebtoken&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^8.5.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;koa&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.13.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;koa-body&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;koa-jwt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.0.3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;koa-router&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^10.1.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;koa-sendfile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;koa-static&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;koa2-cors&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.0.6&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;mongoose&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.3.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;nodemon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.0.15&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;prettier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.6.2&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><p>\u81F3\u6B64\uFF0C\u5B8C\u7F8E\u6492\u82B1\uFF0C\u611F\u8C22\u4F60\u5B9D\u8D35\u7684\u51E0\u5206\u949F\uFF0C\u54C8\u54C8\u54C8\u54C8 \u{1F917}\u3002</p>`,53),e=[o],i={__name:"koa2",setup(c,{expose:n}){return n({frontmatter:{}}),(l,k)=>(s(),a("div",t,e))}};export{i as default};
